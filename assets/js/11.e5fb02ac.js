(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{410:function(t,a,s){"use strict";s.r(a);var e=s(56),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"css布局方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css布局方式"}},[t._v("#")]),t._v(" CSS布局方式：")]),t._v(" "),s("h4",{attrs:{id:"css常见的布局方式包括弹性布局、固定布局、流体布局、混合布局、绝对定位布局等各种布局的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css常见的布局方式包括弹性布局、固定布局、流体布局、混合布局、绝对定位布局等各种布局的优缺点"}},[t._v("#")]),t._v(" CSS常见的布局方式包括弹性布局、固定布局、流体布局、混合布局、绝对定位布局等各种布局的优缺点")]),t._v(" "),s("h3",{attrs:{id:"float浮动布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float浮动布局"}},[t._v("#")]),t._v(" float浮动布局")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 他的的兼容性比较好。\n- float元素宽高和元素之间的间距都是固定的，随着页面缩小，元素会换行。（可以设置为 不换行）。\n- 形成块级元素的属性\n  - 需要清除浮动：  解决塌陷的问题\n    - .clear{clear：both}\n    - 父元素添加 overflow：hidden \n")])])]),s("h3",{attrs:{id:"absolute布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#absolute布局"}},[t._v("#")]),t._v(" absolute布局")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 优点  简单直接，兼容性好。\n- 缺点  脱离了文档流。\n")])])]),s("h3",{attrs:{id:"flex弹性布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex弹性布局"}},[t._v("#")]),t._v(" flex弹性布局")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 布局简单、灵活，移动端好；\n- flex布局的元素宽高和元素之间的间距是变化的，随着页面缩小，父类空白空间减少，元素能分配到的空间也减少，元素的间距也减少。\n- 缺点 是ie8以下不兼容。\n")])])]),s("h3",{attrs:{id:"table表格布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table表格布局"}},[t._v("#")]),t._v(" table表格布局")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 是兼容性好，有时候布局相对简单。\n- 缺点  它是对TABLE标签的不正规使用，当需要内容高度不一致时并不适应。\n")])])]),s("h3",{attrs:{id:"响应式布局-bootstarp-栅格布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应式布局-bootstarp-栅格布局"}},[t._v("#")]),t._v(" 响应式布局  （bootstarp  栅格布局）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 优点：\n    面对不同分辨率设备灵活性强\n    能够快捷解决多设备显示适应问题\n- 缺点\n    兼容各种设备工作量大，效率低下\n    代码累赘，会出现隐藏无用的元素，加载时间加长\n    一定程度上改变了网站原有的布局结构，会出现用户混淆的情况\n")])])]),s("h3",{attrs:{id:"bootstrap-栅格系统-的前端开发框架首先有个打的布局容器-https-v3-bootcss-com"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap-栅格系统-的前端开发框架首先有个打的布局容器-https-v3-bootcss-com"}},[t._v("#")]),t._v(" Bootstrap  栅格系统 的前端开发框架首先有个打的布局容器：https://v3.bootcss.com/")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 概念：前端框架，基于HTML CSS js  来做的一种  框架：\n  - https://v3.bootcss.com/css/#overview\n  - 优点：\n    - 标准的html css代码规范\n    - 一套简介的组件，提高开发效率，不断更新迭代\n      - 2.xx版本 不维护，代码不够简洁，功能不完整\n      - 3.xx版本 稳定，放弃了Ie-6   Ie-7。对IE8页面效果不太好用，\n        - （偏向于移动设备WEB / 响应式布局开发；）项目；\n      - 4.xx 最新版本，目前还不是很流行\n")])])]),s("h3",{attrs:{id:"关于-bootstrap-的前端开发框架的使用-4部曲"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-bootstrap-的前端开发框架的使用-4部曲"}},[t._v("#")]),t._v(" 关于  Bootstrap  的前端开发框架的使用  4部曲：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 1：创建文件结构；\n- 2：创建html骨架结构；\n- 3：引入相关样式问价；\n- 4：书写内容；\n")])])]),s("h3",{attrs:{id:"关于兼容性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于兼容性问题"}},[t._v("#")]),t._v(" 关于兼容性问题：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('[if lt IE 9]>\n\n下面引入问价：解决ie9以下浏览器对html5新增的标签不识别  css不起作用的问题\n  <script src="https://fastly.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"><\/script>\n\n\n上面引入文件是：解决ie9以下浏览器 对css3 Media Query的不识别问题\n    <script src="https://fastly.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"><\/script>\n<![endif]\n')])])]),s("h3",{attrs:{id:"bootstrap-事项预定义好的这个-container这个类-为他提供两个做此用处的类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap-事项预定义好的这个-container这个类-为他提供两个做此用处的类"}},[t._v("#")]),t._v(" Bootstrap 事项预定义好的这个 container这个类，为他提供两个做此用处的类：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 1：container 响应式布局容器  /  container-fluid 流式布局容器 （单独开发移动端）\n- 2：最大屏幕：1200px         /    最大屏幕占 百分百\n- container 响应式布局容器 \n- bootstarp里面的container宽度是固定的 随着屏幕大小不同，container又会划分12等分\n- 类后缀：                   .col-xs-份数\n- .container屏幕宽度         < 768px\n  - 屏幕大小  /              12 等分平均分\n  - class=“col              -lg      -3”\n  - 如果孩子的份数相加       等于 12  沾满整个container宽度 \n  - 如果孩子的份数相加       小于 12  沾不满 整个container宽度  有空白\n  - 如果孩子的份数相加       大于 12  沾满 / 并且换行 整个container宽度\n")])])]),s("h4",{attrs:{id:"grid布局-网格系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grid布局-网格系统"}},[t._v("#")]),t._v(" grid布局  （ 网格系统）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("- 将页面划分成等宽得列，通过列数定义 模块化页面布局 \n- 是第一个基于二维方向的布局模块。它是第一个基于网格的原生布局系统。\n- 缺点  对低版本浏览器兼容性不好。")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);